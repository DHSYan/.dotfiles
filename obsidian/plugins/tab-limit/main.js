/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// main.ts
var main_exports = {};
__export(main_exports, {
  default: () => TabLimitPlugin
});
module.exports = __toCommonJS(main_exports);
var import_obsidian = require("obsidian");
var DEFAULT_SETTINGS = {
  globalTabLimit: 5
  // Default global limit
};
var TabLimitPlugin = class extends import_obsidian.Plugin {
  async onload() {
    await this.loadSettings();
    this.addSettingTab(new TabLimitSettingTab(this.app, this));
    this.registerEvent(this.app.workspace.on("layout-change", () => {
      this.enforceTabLimit();
    }));
  }
  enforceTabLimit() {
    const openTabs = this.app.workspace.getLeavesOfType("markdown");
    if (openTabs.length > this.settings.globalTabLimit) {
      openTabs[openTabs.length - 1].detach();
      new import_obsidian.Notice("Tab limit reached. Unable to open more tabs.");
    }
  }
  async loadSettings() {
    this.settings = Object.assign({}, DEFAULT_SETTINGS, await this.loadData());
  }
  async saveSettings() {
    await this.saveData(this.settings);
  }
};
var TabLimitSettingTab = class extends import_obsidian.PluginSettingTab {
  constructor(app, plugin) {
    super(app, plugin);
    this.plugin = plugin;
  }
  display() {
    const { containerEl } = this;
    containerEl.empty();
    new import_obsidian.Setting(containerEl).setName("Global maximum tab limit").setDesc("Set the maximum number of tabs you can open across all windows.").addSlider((slider) => {
      var _a;
      const valueLabel = containerEl.createEl("span", { text: `${this.plugin.settings.globalTabLimit}` });
      valueLabel.style.marginLeft = "10px";
      slider.setLimits(1, 20, 1).setValue(this.plugin.settings.globalTabLimit).onChange(async (value) => {
        valueLabel.setText(`${value}`);
        this.plugin.settings.globalTabLimit = value;
        await this.plugin.saveSettings();
      });
      (_a = slider.sliderEl.parentElement) == null ? void 0 : _a.appendChild(valueLabel);
    });
  }
};


/* nosourcemap */